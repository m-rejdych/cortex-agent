// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  apiKey      String       @unique
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
  environment Environment?
  personality Personality?
}

model Tool {
  id          String   @id @default(uuid())
  name        String   @unique
  description String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  actions     Action[]
}

model Action {
  id          String   @id @default(uuid())
  name        String
  description String
  instruction String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  toolId      String
  tool        Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)
}

model Memory {
  id         String         @id @default(uuid())
  name       String
  content    String
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  categoryId String
  category   MemoryCategory @relation(fields: [categoryId], references: [id])
}

model Environment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Personality {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MemoryCategory {
  id          String   @id @default(uuid())
  name        String   @unique
  description String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  memories    Memory[]
}
